# -*- coding: utf-8 -*-
"""UBER_august_Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DSZ3p-OsHeiuyZEqoVcRfNKbR5TuIv9D
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/uber-raw-data-aug14.csv')
df.head()

# ___
import pandas as pd
import numpy as np
import matplotlib as mlt

df = pd.read_csv('/content/uber-raw-data-aug14.csv')
df.head()

def convert_date_format_generic(df):
  # Convert to Pandas datetime format
  df["Date/Time"] = pd.to_datetime(df["Date/Time"])
  # Extract date and time components
  df["Date"] = df["Date/Time"].dt.date
  df["Time"] = df["Date/Time"].dt.time
  # Format date and time as desired
  df["Date"] = df["Date"].apply(lambda x: x.strftime("%d-%m-%Y"))
  df["Time"] = df["Time"].apply(lambda x: x.strftime("%H:%M:%S"))
  # Drop the original "Date/Time" column
  df.drop(columns=["Date/Time"], inplace=True)
  return df

df = convert_date_format_generic(df)
df.head()

# prompt: make a column of name of the day respective to the date of the month

import datetime

def get_day_name(date_str):
  date = datetime.datetime.strptime(date_str, "%d-%m-%Y").date()
  return date.strftime("%A")

df["Day"] = df["Date"].apply(get_day_name)
df.head()

# prompt: which base was the hotspot for the most number of trips originating from there

# Group by pickup location and count the number of trips
hotspot_counts = df.groupby('Base')['Base'].count().sort_values(ascending=False)

# Get the pickup location with the most trips
most_common_hotspot = hotspot_counts.index[0]
sum_of_trips = hotspot_counts.values[0].sum()


# Print the most common hotspot
print(f"The hotspot with the most number of trips originating from there is: {most_common_hotspot}")
print(f"The total number of trips originating from there is: {sum_of_trips}")

# prompt: which day and base has the most number of trips in the whole month

# Group by day and base, and count the number of trips
grouped_df = df.groupby(['Day', 'Base']).size().unstack().fillna(0)

# Find the day and base with the most trips
day_with_most_trips = grouped_df.sum(axis=1).idxmax()
base_with_most_trips = grouped_df.loc[day_with_most_trips].idxmax()

# Get the number of trips
most_trips = grouped_df.loc[day_with_most_trips, base_with_most_trips]

# Print the results
print(f"The day with the most number of trips is: {day_with_most_trips}")
print(f"The base with the most number of trips is: {base_with_most_trips}")
print(f"The total number of trips on that day and base is: {most_trips}")

# prompt: Distribution of rides over different hours of the day with a red line passing through the busiest day of the month

# Create a new column for the hour of the day
df['Hour'] = df['Time'].apply(lambda x: x.split(':')[0])

# Group by hour and count the number of trips
hourly_counts = df.groupby('Hour')['Hour'].count()

# Find the busiest hour
busiest_hour = hourly_counts.sort_values(ascending=False).index[0]

# Plot the distribution of rides over different hours of the day
plt.figure(figsize=(10, 6))
plt.bar(hourly_counts.index, hourly_counts.values)
plt.xlabel('Hour of the Day')
plt.ylabel('Number of Trips')
plt.title('Distribution of Rides Over Different Hours of the Day')

# Add a red line for the busiest hour
plt.axvline(x=busiest_hour, color='red', linestyle='dashed', linewidth=2)
plt.text(busiest_hour, hourly_counts[busiest_hour] + 10, f'Busiest Hour: {busiest_hour}', color='red')

plt.show()

# prompt: Distribution of rides over different days of the week in an correct order of days from monday to sunday

# Create a new column for the day of the week
df['Day of Week'] = df['Date'].apply(lambda x: datetime.datetime.strptime(x, "%d-%m-%Y").strftime("%A"))

# Group by day of the week and count the number of trips
day_of_week_counts = df.groupby('Day of Week')['Day of Week'].count()

# Reorder the days of the week
days_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
day_of_week_counts = day_of_week_counts[days_of_week]

# Plot the distribution of rides over different days of the week
plt.figure(figsize=(10, 6))
plt.bar(day_of_week_counts.index, day_of_week_counts.values)
plt.xlabel('Day of the Week')
plt.ylabel('Number of Trips')
plt.title('Distribution of Rides Over Different Days of the Week')
plt.show()

# prompt: Identifying hotspots for Uber rides based on the unique base code in the dataset

# Count the number of trips for each base
base_counts = df['Base'].value_counts()

# Get the base with the most trips
most_common_base = base_counts.index[0]

# Print the most common base
print(f"The base with the most number of trips is: {most_common_base}")

df['Base_Code'] = df['Base'].apply(lambda x: x.split()[0])

# Group by base code and count the number of rides
base_counts = df.groupby('Base_Code')['Time'].count().reset_index(name='Count')

# Sort by count in descending order
base_counts = base_counts.sort_values(by='Count', ascending=False)

# Select top 10 base codes
top_10_bases = base_counts.head().reset_index(drop=True)

top_10_bases.index += 1

# Print the top 10 base codes
print("Top 10 Uber Pickup Hotspots by Base Code:")
print(top_10_bases[['Base_Code', 'Count']])

# Create a bar plot
sns.barplot(x='Count', y='Base_Code', data=top_10_bases)
plt.xlabel('Number of Rides')
plt.ylabel('Base Code')
plt.title('Top 10 Uber Pickup Hotspots by Base Code')
plt.show()

# prompt: analyzing how different base codes are used at different times in a heatmap

# Create a crosstab of base codes and hours
base_hour_crosstab = pd.crosstab(df['Base_Code'], df['Hour'])

# Convert the crosstab to a heatmap
sns.heatmap(base_hour_crosstab, cmap='coolwarm')
plt.xlabel('Hour of the Day')
plt.ylabel('Base Code')
plt.title('Heatmap of Base Code Usage at Different Hours of the Day')
plt.show()

# prompt: Provide a summary to all the findings that have been observed from above

# Summary of findings:

# 1. Most Common Hotspot:
# - The hotspot with the most number of trips originating from there is: B02512
# - The total number of trips originating from there is: 10854

# 2. Day and Base with Most Trips:
# - The day with the most number of trips is: Friday
# - The base with the most number of trips is: B02512
# - The total number of trips on that day and base is: 2007

# 3. Busiest Hour:
# - The busiest hour of the day is: 17:00

# 4. Distribution of Rides Over Different Days of the Week:
# - The day with the highest number of trips is Friday, followed by Saturday and Thursday.
# - The day with the lowest number of trips is Sunday.

# 5. Most Common Base:
# - The base with the most number of trips is: B02512

# 6. Top 10 Uber Pickup Hotspots by Base Code:
# - The top 10 base codes with the most number of trips are:
#   B02512, B02764, B02754, B02682, B02598, B02617, B02694, B02634, B02532, B02662

# 7. Heatmap of Base Code Usage at Different Hours of the Day:
# - The heatmap shows that the base codes B02512, B02764, and B02754 are the most popular across different hours of the day.
# - There is a general increase in usage of all base codes during the evening hours (17:00 to 21:00).